#define IDLE      0
#define SET_BASE  1
#define SET_EXP   2
#define SET_N     3
#define SAVE      21
int state = IDLE;

void setup() {
  pinMode(SAVE, OUTPUT);
  pinMode(22, OUTPUT);
  pinMode(23, OUTPUT);
  pinMode(24, OUTPUT);
  pinMode(25, OUTPUT);
  pinMode(26, OUTPUT);
  pinMode(27, OUTPUT);
  pinMode(28, OUTPUT);
  pinMode(29, OUTPUT);
  pinMode(30, OUTPUT);
  pinMode(31, OUTPUT);
  pinMode(32, OUTPUT);
  pinMode(33, OUTPUT);
  pinMode(34, OUTPUT);
  pinMode(35, OUTPUT);
  pinMode(36, OUTPUT);
  pinMode(37, OUTPUT);
  pinMode(38, OUTPUT);
  pinMode(39, OUTPUT);
  pinMode(40, OUTPUT);
  pinMode(41, OUTPUT);
  pinMode(42, OUTPUT);
  pinMode(42, OUTPUT);
  pinMode(43, OUTPUT);
  pinMode(44, OUTPUT);
  pinMode(45, OUTPUT);
  pinMode(46, OUTPUT);
  pinMode(47, OUTPUT);
  pinMode(48, OUTPUT);
  pinMode(49, OUTPUT);
  pinMode(50, OUTPUT);
  pinMode(51, OUTPUT);
  pinMode(52, OUTPUT);
  pinMode(53, OUTPUT);

  Serial.begin(9600);
}

void loop() {
  
  digitalWrite(SAVE, HIGH);
  int flag = 0;
  Serial.println("[32bit RSA program]");
  Serial.println("Message : 0x0321_78C4");

  if (state == IDLE) {
    if (!flag) {
      Serial.println("encryption start");
      state = SET_BASE;
      flag++;

      delay(2000);  
    }
  }
  else if (state == SET_BASE) {
    set_h0321_78C4();
    state = SET_EXP;
    digitalWrite(SAVE, LOW);
    digitalWrite(SAVE, HIGH);
    
    delay(2000);
  }
  else if (state == SET_EXP) {
    set_h0000_0011();
    state = SET_N;
    digitalWrite(SAVE, LOW);
    digitalWrite(SAVE, HIGH);
    
    delay(2000);
  }
  else if (state == SET_N) {
    set_h07A5_0679();
    state = SET_N;
    digitalWrite(SAVE, LOW);
    digitalWrite(SAVE, HIGH);
    
    delay(2000);
  }
  
}

// 0x0321_78C4 = 52525252
// 0000 0011 0010 0001 0111 1000 1100 0100
void set_h0321_78C4() {
  digitalWrite(22, LOW); //  0
  digitalWrite(23, LOW); //  1
  digitalWrite(24, HIGH); //  2
  digitalWrite(25, LOW); //  3

  digitalWrite(26, LOW); //  4
  digitalWrite(27, LOW); //  5
  digitalWrite(28, HIGH); //  6
  digitalWrite(29, HIGH); //  7

  digitalWrite(30, LOW); // 8
  digitalWrite(31, LOW); // 9
  digitalWrite(32, LOW); // 10
  digitalWrite(33, HIGH); // 11

  digitalWrite(34, HIGH); // 12
  digitalWrite(35, HIGH); // 13
  digitalWrite(36, HIGH); // 14
  digitalWrite(37, LOW); // 15

  digitalWrite(38, HIGH); // 16 
  digitalWrite(39, LOW); // 17
  digitalWrite(40, LOW); // 18
  digitalWrite(41, LOW); // 19

  digitalWrite(42, LOW); // 20
  digitalWrite(43, HIGH); // 21
  digitalWrite(44, LOW); // 22
  digitalWrite(45, LOW); // 23

  digitalWrite(46, HIGH); // 24
  digitalWrite(47, HIGH); // 25
  digitalWrite(48, LOW); // 26
  digitalWrite(49, LOW); // 27
  
  digitalWrite(50, LOW); // 28
  digitalWrite(51, LOW); // 29
  digitalWrite(52, LOW); // 30
  digitalWrite(53, LOW); // 31
}

// 0x0000_0011 = 17
// 0000 0000 0000 0000 0000 0000 0001 0001
void set_h0000_0011() {
  digitalWrite(22, HIGH); //  0
  digitalWrite(23, LOW); //  1
  digitalWrite(24, LOW); //  2
  digitalWrite(25, LOW); //  3

  digitalWrite(26, HIGH); //  4
  digitalWrite(27, LOW); //  5
  digitalWrite(28, LOW); //  6
  digitalWrite(29, LOW); //  7

  digitalWrite(30, LOW); // 8
  digitalWrite(31, LOW); // 9
  digitalWrite(32, LOW); // 10
  digitalWrite(33, LOW); // 11

  digitalWrite(34, LOW); // 12
  digitalWrite(35, LOW); // 13
  digitalWrite(36, LOW); // 14
  digitalWrite(37, LOW); // 15

  digitalWrite(38, LOW); // 16 
  digitalWrite(39, LOW); // 17
  digitalWrite(40, LOW); // 18
  digitalWrite(41, LOW); // 19

  digitalWrite(42, LOW); // 20
  digitalWrite(43, LOW); // 21
  digitalWrite(44, LOW); // 22
  digitalWrite(45, LOW); // 23

  digitalWrite(46, LOW); // 24
  digitalWrite(47, LOW); // 25
  digitalWrite(48, LOW); // 26
  digitalWrite(49, LOW); // 27
  
  digitalWrite(50, LOW); // 28
  digitalWrite(51, LOW); // 29
  digitalWrite(52, LOW); // 30
  digitalWrite(53, LOW); // 31
}

//0x07A5_0679 = 128255609
// 0000 0111 1010 0101 0000 0110 0111 1001
void set_h07A5_0679() {
  digitalWrite(22, HIGH); //  0
  digitalWrite(23, LOW); //  1
  digitalWrite(24, LOW); //  2
  digitalWrite(25, HIGH); //  3

  digitalWrite(26, HIGH); //  4
  digitalWrite(27, HIGH); //  5
  digitalWrite(28, HIGH); //  6
  digitalWrite(29, LOW); //  7

  digitalWrite(30, LOW); // 8
  digitalWrite(31, HIGH); // 9
  digitalWrite(32, HIGH); // 10
  digitalWrite(33, LOW); // 11

  digitalWrite(34, LOW); // 12
  digitalWrite(35, LOW); // 13
  digitalWrite(36, LOW); // 14
  digitalWrite(37, LOW); // 15

  digitalWrite(38, HIGH); // 16 
  digitalWrite(39, LOW); // 17
  digitalWrite(40, HIGH); // 18
  digitalWrite(41, LOW); // 19

  digitalWrite(42, LOW); // 20
  digitalWrite(43, HIGH); // 21
  digitalWrite(44, LOW); // 22
  digitalWrite(45, HIGH); // 23

  digitalWrite(46, LOW); // 24
  digitalWrite(47, HIGH); // 25
  digitalWrite(48, HIGH); // 26
  digitalWrite(49, HIGH); // 27
  
  digitalWrite(50, LOW); // 28
  digitalWrite(51, LOW); // 29
  digitalWrite(52, LOW); // 30
  digitalWrite(53, LOW); // 31
}

void set_zero() {
  digitalWrite(22, LOW); //  0
  digitalWrite(23, LOW); //  1
  digitalWrite(24, LOW); //  2
  digitalWrite(25, LOW); //  3

  digitalWrite(26, LOW); //  4
  digitalWrite(27, LOW); //  5
  digitalWrite(28, LOW); //  6
  digitalWrite(29, LOW); //  7

  digitalWrite(30, LOW); // 8
  digitalWrite(31, LOW); // 9
  digitalWrite(32, LOW); // 10
  digitalWrite(33, LOW); // 11

  digitalWrite(34, LOW); // 12
  digitalWrite(35, LOW); // 13
  digitalWrite(36, LOW); // 14
  digitalWrite(37, LOW); // 15

  digitalWrite(38, LOW); // 16 
  digitalWrite(39, LOW); // 17
  digitalWrite(40, LOW); // 18
  digitalWrite(41, LOW); // 19

  digitalWrite(42, LOW); // 20
  digitalWrite(43, LOW); // 21
  digitalWrite(44, LOW); // 22
  digitalWrite(45, LOW); // 23

  digitalWrite(46, LOW); // 24
  digitalWrite(47, LOW); // 25
  digitalWrite(48, LOW); // 26
  digitalWrite(49, LOW); // 27
  
  digitalWrite(50, LOW); // 28
  digitalWrite(51, LOW); // 29
  digitalWrite(52, LOW); // 30
  digitalWrite(53, LOW); // 31
}